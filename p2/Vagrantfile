# Vagrant.configure("2") do |config|
#   config.vm.define "nponchonS" do |server|
#     server.vm.box = "bento/ubuntu-24.04"
#     server.vm.hostname = "nponchonS"
#     server.vm.network :private_network, ip: "192.168.56.110"
#     server.vm.provider "virtualbox" do |vb|
#       vb.memory = 1024
#       vb.cpus = 1
#       vb.name = "nponchonS"
#     end
#     server.vm.provision "shell", inline: <<-SCRIPT
#       # Install K3s in server mode with Traefik on host ports
#       curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san 192.168.56.110 --node-ip 192.168.56.110 --node-external-ip 192.168.56.110 --disable servicelb --disable metrics-server --disable local-storage" sh -
#       sleep 10
#       sudo cat /var/lib/rancher/k3s/server/node-token >/vagrant/node-token

#       # Setup kubeconfig for vagrant user
#       sudo mkdir -p /home/vagrant/.kube
#       sudo cp /etc/rancher/k3s/k3s.yaml /home/vagrant/.kube/config
#       sudo cp /etc/rancher/k3s/k3s.yaml /vagrant/k3s.yaml
#       sudo chown vagrant:vagrant /home/vagrant/.kube/config
#       sudo chown vagrant:vagrant /vagrant/k3s.yaml
# 	  sudo chmod 644 /etc/rancher/k3s/k3s.yaml
#       sudo chmod 600 /home/vagrant/.kube/config

#       # Replace server IP in kubeconfig
#       sudo sed -i 's/127.0.0.1/192.168.56.110/g' /home/vagrant/.kube/config
#       sudo sed -i 's/127.0.0.1/192.168.56.110/g' /vagrant/k3s.yaml
      
#       # Allow necessary ports
#       sudo ufw allow 6443/tcp
#       sudo ufw allow 80/tcp
#       sudo ufw allow 443/tcp
#       sudo ufw reload

#       # Wait for K3s to be ready
#       sleep 20
      
#       # Configure Traefik to use host ports
#       sudo tee /var/lib/rancher/k3s/server/manifests/traefik-config.yaml > /dev/null <<EOF
# apiVersion: helm.cattle.io/v1
# kind: HelmChartConfig
# metadata:
#   name: traefik
#   namespace: kube-system
# spec:
#   valuesContent: |-
#     service:
#       type: NodePort
#     ports:
#       web:
#         port: 8080
#         expose: true
#         exposedPort: 80
#         nodePort: 80
#       websecure:
#         port: 8443
#         expose: true
#         exposedPort: 443
#         nodePort: 443
#     hostNetwork: true
# EOF

#       # Wait for Traefik to restart with new config
#       sleep 30

#       # Apply the Kubernetes manifests from the shared /vagrant directory
#       cd /vagrant
#       sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f nginx_app.yaml
#       sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f apache_app.yaml
#       sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f default_app.yaml
      
#       # Wait for deployments to be ready before applying ingress
#       sleep 30
#       sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f ingress.yaml

#     SCRIPT
#   end
# end
Vagrant.configure("2") do |config|
  config.vm.define "nponchonS" do |server|
    server.vm.box = "bento/ubuntu-24.04"
    server.vm.hostname = "nponchonS"
    server.vm.network :private_network, ip: "192.168.56.110"
    server.vm.provider "virtualbox" do |vb|
      vb.memory = 1024
      vb.cpus = 1
      vb.name = "nponchonS"
    end
    server.vm.provision "shell", inline: <<-SCRIPT
      # Install K3s with minimal configuration - let Traefik use defaults
      curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san 192.168.56.110 --node-ip 192.168.56.110 --node-external-ip 192.168.56.110" sh -
      sleep 10
      sudo cat /var/lib/rancher/k3s/server/node-token >/vagrant/node-token

      # Setup kubeconfig for vagrant user
      sudo mkdir -p /home/vagrant/.kube
      sudo cp /etc/rancher/k3s/k3s.yaml /home/vagrant/.kube/config
      sudo cp /etc/rancher/k3s/k3s.yaml /vagrant/k3s.yaml
      sudo chown vagrant:vagrant /home/vagrant/.kube/config
      sudo chown vagrant:vagrant /vagrant/k3s.yaml
      sudo chmod 644 /etc/rancher/k3s/k3s.yaml
      sudo chmod 600 /home/vagrant/.kube/config

      # Replace server IP in kubeconfig
      sudo sed -i 's/127.0.0.1/192.168.56.110/g' /home/vagrant/.kube/config
      sudo sed -i 's/127.0.0.1/192.168.56.110/g' /vagrant/k3s.yaml
      
      # Allow necessary ports
      sudo ufw allow 6443/tcp
      sudo ufw allow 80/tcp
      sudo ufw allow 443/tcp
      sudo ufw reload

      # Wait for K3s to be ready
      sleep 30
      
      # Wait for Traefik to be ready (it comes with K3s by default)
      sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=traefik -n kube-system --timeout=300s

      # Apply the Kubernetes manifests from the shared /vagrant directory
      cd /vagrant
      sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f nginx_app.yaml
      sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f apache_app.yaml
      sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f default_app.yaml

      # Wait for deployments to be ready before applying ingress
      sleep 30
      sudo KUBECONFIG=/etc/rancher/k3s/k3s.yaml kubectl apply -f ingress.yaml

    SCRIPT
  end

  config.vm.define "nponchonSW" do |serverWorker|
    serverWorker.vm.box = "bento/ubuntu-24.04"
    serverWorker.vm.hostname = "nponchonSW"
    serverWorker.vm.network :private_network, ip: "192.168.56.111"
    serverWorker.vm.provider "virtualbox" do |vb|
      vb.memory = 1024
      vb.cpus = 1
    end
    serverWorker.vm.provision "shell", inline: <<-SCRIPT
      while [ ! -f /vagrant/node-token ]; do sleep 2; done
      export K3S_URL="https://192.168.56.110:6443"
      export K3S_TOKEN=$(cat /vagrant/node-token)
      curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--node-ip 192.168.56.111 --node-external-ip 192.168.56.111" sh -

      sudo mkdir -p /home/vagrant/.kube
      sudo cp /vagrant/k3s.yaml /home/vagrant/.kube/config
      sudo chown vagrant:vagrant /home/vagrant/.kube/config

      # Replace server IP in kubeconfig
      sudo sed -i 's/127.0.0.1/192.168.56.110/g' /home/vagrant/.kube/config
    SCRIPT
  end
end